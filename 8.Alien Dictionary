https://practice.geeksforgeeks.org/problems/alien-dictionary/1/?category[]=Graph&category[]=Graph&page=1&query=category[]Graphpage1category[]Graph

    void DFSRec(vector<int>adj[],int s,stack<int>&st,bool visited[])
    {
        visited[s]=true;
        for(int u:adj[s])
            if(visited[u]==false)
                DFSRec(adj,u,st,visited);
        st.push(s);
    }
    string topologicalSort(vector<int>adj[],int n)
    {
        bool visited[n];
        stack<int>st;
        for(int i=0;i<n;i++)
            visited[i]=false;
        for(int i=0;i<n;i++)
            if(visited[i]==false)
                DFSRec(adj,i,st,visited);
        string str="";
        while(!st.empty())
        {
            //cout<<(char)(st.top()+'a')<<endl;
            str+=(char)(st.top()+'a');
            st.pop();
        }
        return str;
    }
    string findOrder(string dict[], int N, int K) {
        //code here
        vector<int>adj[K];
        for(int i=0;i<N-1;i++)
        {
            string word1=dict[i];
            string word2=dict[i+1];
            for(int j=0;j<min(word1.length(),word2.length());j++)
            {
                if(word1[j]!=word2[j])
                {
                    int index1=word1[j]-'a';
                    int index2=word2[j]-'a';
                    adj[index1].push_back(index2);
                    break;
                }
            }
        }
        return topologicalSort(adj,K);
    }
